"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zk-kit+utils@1.3.0";
exports.ids = ["vendor-chunks/@zk-kit+utils@1.3.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@zk-kit+utils@1.3.0/node_modules/@zk-kit/utils/dist/lib.esm/error-handlers.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@zk-kit+utils@1.3.0/node_modules/@zk-kit/utils/dist/lib.esm/error-handlers.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requireArray: () => (/* binding */ requireArray),\n/* harmony export */   requireBigInt: () => (/* binding */ requireBigInt),\n/* harmony export */   requireBigNumber: () => (/* binding */ requireBigNumber),\n/* harmony export */   requireBigNumberish: () => (/* binding */ requireBigNumberish),\n/* harmony export */   requireBoolean: () => (/* binding */ requireBoolean),\n/* harmony export */   requireBuffer: () => (/* binding */ requireBuffer),\n/* harmony export */   requireDefined: () => (/* binding */ requireDefined),\n/* harmony export */   requireFunction: () => (/* binding */ requireFunction),\n/* harmony export */   requireHexadecimal: () => (/* binding */ requireHexadecimal),\n/* harmony export */   requireNumber: () => (/* binding */ requireNumber),\n/* harmony export */   requireObject: () => (/* binding */ requireObject),\n/* harmony export */   requireString: () => (/* binding */ requireString),\n/* harmony export */   requireStringifiedBigInt: () => (/* binding */ requireStringifiedBigInt),\n/* harmony export */   requireTypes: () => (/* binding */ requireTypes),\n/* harmony export */   requireUint8Array: () => (/* binding */ requireUint8Array)\n/* harmony export */ });\n/* harmony import */ var _type_checks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type-checks.js */ \"(ssr)/./node_modules/.pnpm/@zk-kit+utils@1.3.0/node_modules/@zk-kit/utils/dist/lib.esm/type-checks.js\");\n/**\n * @module @zk-kit/utils\n * @version 1.3.0\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2025\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\n\n\n/**\n * @module ErrorHandlers\n * This module is designed to provide utility functions for validating\n * function parameters. It includes functions that throw type errors if\n * the parameters do not meet specified criteria, such as being defined,\n * a number, a string, a function, or an array. This module helps ensure\n * that functions receive the correct types of inputs, enhancing code\n * reliability and reducing runtime errors.\n */\n/**\n * @throws Throws a type error if the parameter value has not been defined.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireDefined(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isDefined)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not defined`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a number.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireNumber(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a number, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a boolean.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBoolean(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isBoolean)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a boolean, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a string.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireString(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isString)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a string, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a function.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireFunction(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a function, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireArray(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Uint8Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireUint8Array(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isUint8Array)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Uint8Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Buffer.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBuffer(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isBuffer)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Buffer instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an object.\n * Please, note that arrays are also objects in JavaScript.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireObject(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an object, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigInt(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isBigInt)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bigint, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a stringified bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireStringifiedBigInt(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isStringifiedBigInt)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a stringified bigint`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a hexadecimal string.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction requireHexadecimal(parameterValue, parameterName, prefix = true) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isHexadecimal)(parameterValue, prefix)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a hexadecimal string`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumber(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isBigNumber)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber-ish.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumberish(parameterValue, parameterName) {\n    if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isBigNumberish)(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber-ish`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value type is not part of the list of types.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireTypes(parameterValue, parameterName, types) {\n    for (const type of types) {\n        if (!(0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isSupportedType)(type)) {\n            throw new Error(`Type '${type}' is not supported`);\n        }\n    }\n    for (const type of types) {\n        if ((0,_type_checks_js__WEBPACK_IMPORTED_MODULE_0__.isType)(parameterValue, type)) {\n            return;\n        }\n    }\n    throw new TypeError(`Parameter '${parameterName}' is none of the following types: ${types.join(\", \")}`);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@zk-kit+utils@1.3.0/node_modules/@zk-kit/utils/dist/lib.esm/error-handlers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@zk-kit+utils@1.3.0/node_modules/@zk-kit/utils/dist/lib.esm/type-checks.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@zk-kit+utils@1.3.0/node_modules/@zk-kit/utils/dist/lib.esm/type-checks.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isBigInt: () => (/* binding */ isBigInt),\n/* harmony export */   isBigNumber: () => (/* binding */ isBigNumber),\n/* harmony export */   isBigNumberish: () => (/* binding */ isBigNumberish),\n/* harmony export */   isBoolean: () => (/* binding */ isBoolean),\n/* harmony export */   isBuffer: () => (/* binding */ isBuffer),\n/* harmony export */   isDefined: () => (/* binding */ isDefined),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isHexadecimal: () => (/* binding */ isHexadecimal),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isStringifiedBigInt: () => (/* binding */ isStringifiedBigInt),\n/* harmony export */   isSupportedType: () => (/* binding */ isSupportedType),\n/* harmony export */   isType: () => (/* binding */ isType),\n/* harmony export */   isUint8Array: () => (/* binding */ isUint8Array),\n/* harmony export */   supportedTypes: () => (/* binding */ supportedTypes)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/**\n * @module @zk-kit/utils\n * @version 1.3.0\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2025\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\n\n\n/**\n * @module TypeChecks\n * This module provides utility functions to check data types.\n * It defines a set of supported types and includes functions to check if\n * a value is defined and if it matches a supported type. These functions\n * are useful for type checking and validation in the other libraries,\n * enhancing code robustness and reliability.\n */\n/** @internal */\nconst supportedTypes = [\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"function\",\n    \"Array\",\n    \"Uint8Array\",\n    \"Buffer\",\n    \"object\",\n    \"bigint\",\n    \"stringified-bigint\",\n    \"hexadecimal\",\n    \"bignumber\",\n    \"bignumberish\"\n];\n/**\n * Returns true if the value is defined, false otherwise.\n * @param value The value to be checked.\n */\nfunction isDefined(value) {\n    return typeof value !== \"undefined\";\n}\n/**\n * Returns true if the value is a number, false otherwise.\n * @param value The value to be checked.\n */\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\n/**\n * Returns true if the value is a boolean, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\n/**\n * Returns true if the value is a string, false otherwise.\n * @param value The value to be checked.\n */\nfunction isString(value) {\n    return typeof value === \"string\";\n}\n/**\n * Returns true if the value is a function, false otherwise.\n * @param value The value to be checked.\n */\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\n/**\n * Returns true if the value is an object, false otherwise.\n * Please, note that arrays are also objects in JavaScript.\n * @param value The value to be checked.\n */\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n/**\n * Returns true if the value is an Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isArray(value) {\n    return isObject(value) && Array.isArray(value);\n}\n/**\n * Returns true if the value is a Uint8Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isUint8Array(value) {\n    return value instanceof Uint8Array;\n}\n/**\n * Returns true if the value is a Buffer instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBuffer(value) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.isBuffer(value);\n}\n/**\n * Returns true if the value is a bigint, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBigInt(value) {\n    return typeof value === \"bigint\";\n}\n/**\n * Checks if the given value is a string that represents a valid bigint.\n * @param value The value to be checked if it's a stringified bigint.\n */\nfunction isStringifiedBigInt(value) {\n    // Check if value is a string first.\n    if (!isString(value)) {\n        return false;\n    }\n    try {\n        // Attempt to convert the string to BigInt.\n        BigInt(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Checks if a string is a valid hexadecimal string representation.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param value The string to be tested.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction isHexadecimal(value, prefix = true) {\n    if (!isString(value)) {\n        return false;\n    }\n    if (prefix) {\n        return /^(0x|0X)[0-9a-fA-F]+$/.test(value);\n    }\n    return /^[0-9a-fA-F]+$/.test(value);\n}\n/**\n * Checks if the given value can be considered as BigNumber.\n * A value is considered a BigNumber if it is a bigint or a string\n * that can be converted to a bigint (via `Bigint(s)`).\n * @param value The value to check.\n */\nfunction isBigNumber(value) {\n    return isBigInt(value) || isStringifiedBigInt(value);\n}\n/**\n * Checks if the given value can be considered as BigNumberish.\n * A value is considered BigNumberish if it meets\n * any of the following conditions: it's a number, a bigint, a string\n * that can be converted to a bigint, a hexadecimal\n * string, or a Buffer object.\n * @param value The value to check.\n */\nfunction isBigNumberish(value) {\n    return (isNumber(value) ||\n        isBigInt(value) ||\n        isStringifiedBigInt(value) ||\n        isHexadecimal(value) ||\n        isBuffer(value) ||\n        isUint8Array(value));\n}\n/**\n * Returns true if the value type is the same as the type passed\n * as the second parameter, false otherwise.\n * @param value\n * @param type The expected type.\n */\nfunction isType(value, type) {\n    switch (type) {\n        case \"number\":\n            return isNumber(value);\n        case \"boolean\":\n            return isBoolean(value);\n        case \"string\":\n            return isString(value);\n        case \"function\":\n            return isFunction(value);\n        case \"Array\":\n            return isArray(value);\n        case \"Uint8Array\":\n            return isUint8Array(value);\n        case \"Buffer\":\n            return isBuffer(value);\n        case \"object\":\n            return isObject(value);\n        case \"bigint\":\n            return isBigInt(value);\n        case \"stringified-bigint\":\n            return isStringifiedBigInt(value);\n        case \"hexadecimal\":\n            return isHexadecimal(value);\n        case \"bignumber\":\n            return isBigNumber(value);\n        case \"bignumberish\":\n            return isBigNumberish(value);\n        default:\n            return false;\n    }\n}\n/**\n * Returns true if the type is being supported by this utility\n * functions, false otherwise.\n * @param type The type to be checked.\n */\nfunction isSupportedType(type) {\n    return supportedTypes.includes(type);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@zk-kit+utils@1.3.0/node_modules/@zk-kit/utils/dist/lib.esm/type-checks.js\n");

/***/ })

};
;