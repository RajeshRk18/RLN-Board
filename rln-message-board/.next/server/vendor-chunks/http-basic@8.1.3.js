"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/http-basic@8.1.3";
exports.ids = ["vendor-chunks/http-basic@8.1.3"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/FileCache.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/FileCache.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar path_1 = __webpack_require__(/*! path */ \"path\");\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nfunction jsonParse(data, cb) {\n    var result = null;\n    try {\n        result = JSON.parse(data);\n    }\n    catch (ex) {\n        return cb(ex);\n    }\n    cb(null, result);\n}\nfunction getCacheKey(url) {\n    var hash = crypto_1.createHash('sha512');\n    hash.update(url);\n    return hash.digest('hex');\n}\nvar FileCache = /** @class */ (function () {\n    function FileCache(location) {\n        this._location = location;\n    }\n    FileCache.prototype.getResponse = function (url, callback) {\n        var key = path_1.resolve(this._location, getCacheKey(url));\n        fs.readFile(key + '.json', 'utf8', function (err, data) {\n            if (err && err.code === 'ENOENT')\n                return callback(null, null);\n            else if (err)\n                return callback(err, null);\n            jsonParse(data, function (err, response) {\n                if (err) {\n                    return callback(err, null);\n                }\n                var body = fs.createReadStream(key + '.body');\n                response.body = body;\n                callback(null, response);\n            });\n        });\n    };\n    FileCache.prototype.setResponse = function (url, response) {\n        var key = path_1.resolve(this._location, getCacheKey(url));\n        var errored = false;\n        fs.mkdir(this._location, function (err) {\n            if (err && err.code !== 'EEXIST') {\n                console.warn('Error creating cache: ' + err.message);\n                return;\n            }\n            response.body.pipe(fs.createWriteStream(key + '.body')).on('error', function (err) {\n                errored = true;\n                console.warn('Error writing to cache: ' + err.message);\n            }).on('close', function () {\n                if (!errored) {\n                    fs.writeFile(key + '.json', JSON.stringify({\n                        statusCode: response.statusCode,\n                        headers: response.headers,\n                        requestHeaders: response.requestHeaders,\n                        requestTimestamp: response.requestTimestamp\n                    }, null, '  '), function (err) {\n                        if (err) {\n                            console.warn('Error writing to cache: ' + err.message);\n                        }\n                    });\n                }\n            });\n        });\n    };\n    FileCache.prototype.updateResponseHeaders = function (url, response) {\n        var key = path_1.resolve(this._location, getCacheKey(url));\n        fs.readFile(key + '.json', 'utf8', function (err, data) {\n            if (err) {\n                console.warn('Error writing to cache: ' + err.message);\n                return;\n            }\n            var parsed = null;\n            try {\n                parsed = JSON.parse(data);\n            }\n            catch (ex) {\n                console.warn('Error writing to cache: ' + ex.message);\n                return;\n            }\n            fs.writeFile(key + '.json', JSON.stringify({\n                statusCode: parsed.statusCode,\n                headers: response.headers,\n                requestHeaders: parsed.requestHeaders,\n                requestTimestamp: response.requestTimestamp\n            }, null, '  '), function (err) {\n                if (err) {\n                    console.warn('Error writing to cache: ' + err.message);\n                }\n            });\n        });\n    };\n    FileCache.prototype.invalidateResponse = function (url, callback) {\n        var key = path_1.resolve(this._location, getCacheKey(url));\n        fs.unlink(key + '.json', function (err) {\n            if (err && err.code === 'ENOENT')\n                return callback(null);\n            else\n                callback(err || null);\n        });\n    };\n    return FileCache;\n}());\nexports[\"default\"] = FileCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaHR0cC1iYXNpY0A4LjEuMy9ub2RlX21vZHVsZXMvaHR0cC1iYXNpYy9saWIvRmlsZUNhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCO0FBQ2xCLFNBQVMsbUJBQU8sQ0FBQyxjQUFJO0FBQ3JCLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQixlQUFlLG1CQUFPLENBQUMsc0JBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsiL2hvbWUvdXNlcm5hbWUvYWxlby9yYXRlLWxpbWl0aW5nLW51bGxpZmllci9ybG4tbWVzc2FnZS1ib2FyZC9ub2RlX21vZHVsZXMvLnBucG0vaHR0cC1iYXNpY0A4LjEuMy9ub2RlX21vZHVsZXMvaHR0cC1iYXNpYy9saWIvRmlsZUNhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgZnMgPSByZXF1aXJlKFwiZnNcIik7XG52YXIgcGF0aF8xID0gcmVxdWlyZShcInBhdGhcIik7XG52YXIgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuZnVuY3Rpb24ganNvblBhcnNlKGRhdGEsIGNiKSB7XG4gICAgdmFyIHJlc3VsdCA9IG51bGw7XG4gICAgdHJ5IHtcbiAgICAgICAgcmVzdWx0ID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICB9XG4gICAgY2F0Y2ggKGV4KSB7XG4gICAgICAgIHJldHVybiBjYihleCk7XG4gICAgfVxuICAgIGNiKG51bGwsIHJlc3VsdCk7XG59XG5mdW5jdGlvbiBnZXRDYWNoZUtleSh1cmwpIHtcbiAgICB2YXIgaGFzaCA9IGNyeXB0b18xLmNyZWF0ZUhhc2goJ3NoYTUxMicpO1xuICAgIGhhc2gudXBkYXRlKHVybCk7XG4gICAgcmV0dXJuIGhhc2guZGlnZXN0KCdoZXgnKTtcbn1cbnZhciBGaWxlQ2FjaGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRmlsZUNhY2hlKGxvY2F0aW9uKSB7XG4gICAgICAgIHRoaXMuX2xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgfVxuICAgIEZpbGVDYWNoZS5wcm90b3R5cGUuZ2V0UmVzcG9uc2UgPSBmdW5jdGlvbiAodXJsLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIga2V5ID0gcGF0aF8xLnJlc29sdmUodGhpcy5fbG9jYXRpb24sIGdldENhY2hlS2V5KHVybCkpO1xuICAgICAgICBmcy5yZWFkRmlsZShrZXkgKyAnLmpzb24nLCAndXRmOCcsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICAgIGlmIChlcnIgJiYgZXJyLmNvZGUgPT09ICdFTk9FTlQnKVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhudWxsLCBudWxsKTtcbiAgICAgICAgICAgIGVsc2UgaWYgKGVycilcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyLCBudWxsKTtcbiAgICAgICAgICAgIGpzb25QYXJzZShkYXRhLCBmdW5jdGlvbiAoZXJyLCByZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVyciwgbnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBib2R5ID0gZnMuY3JlYXRlUmVhZFN0cmVhbShrZXkgKyAnLmJvZHknKTtcbiAgICAgICAgICAgICAgICByZXNwb25zZS5ib2R5ID0gYm9keTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCByZXNwb25zZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBGaWxlQ2FjaGUucHJvdG90eXBlLnNldFJlc3BvbnNlID0gZnVuY3Rpb24gKHVybCwgcmVzcG9uc2UpIHtcbiAgICAgICAgdmFyIGtleSA9IHBhdGhfMS5yZXNvbHZlKHRoaXMuX2xvY2F0aW9uLCBnZXRDYWNoZUtleSh1cmwpKTtcbiAgICAgICAgdmFyIGVycm9yZWQgPSBmYWxzZTtcbiAgICAgICAgZnMubWtkaXIodGhpcy5fbG9jYXRpb24sIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIgJiYgZXJyLmNvZGUgIT09ICdFRVhJU1QnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdFcnJvciBjcmVhdGluZyBjYWNoZTogJyArIGVyci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNwb25zZS5ib2R5LnBpcGUoZnMuY3JlYXRlV3JpdGVTdHJlYW0oa2V5ICsgJy5ib2R5JykpLm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICBlcnJvcmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIHdyaXRpbmcgdG8gY2FjaGU6ICcgKyBlcnIubWVzc2FnZSk7XG4gICAgICAgICAgICB9KS5vbignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFlcnJvcmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGZzLndyaXRlRmlsZShrZXkgKyAnLmpzb24nLCBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNDb2RlOiByZXNwb25zZS5zdGF0dXNDb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3RIZWFkZXJzOiByZXNwb25zZS5yZXF1ZXN0SGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3RUaW1lc3RhbXA6IHJlc3BvbnNlLnJlcXVlc3RUaW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgfSwgbnVsbCwgJyAgJyksIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIHdyaXRpbmcgdG8gY2FjaGU6ICcgKyBlcnIubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEZpbGVDYWNoZS5wcm90b3R5cGUudXBkYXRlUmVzcG9uc2VIZWFkZXJzID0gZnVuY3Rpb24gKHVybCwgcmVzcG9uc2UpIHtcbiAgICAgICAgdmFyIGtleSA9IHBhdGhfMS5yZXNvbHZlKHRoaXMuX2xvY2F0aW9uLCBnZXRDYWNoZUtleSh1cmwpKTtcbiAgICAgICAgZnMucmVhZEZpbGUoa2V5ICsgJy5qc29uJywgJ3V0ZjgnLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdFcnJvciB3cml0aW5nIHRvIGNhY2hlOiAnICsgZXJyLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBwYXJzZWQgPSBudWxsO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwYXJzZWQgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdFcnJvciB3cml0aW5nIHRvIGNhY2hlOiAnICsgZXgubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnMud3JpdGVGaWxlKGtleSArICcuanNvbicsIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBzdGF0dXNDb2RlOiBwYXJzZWQuc3RhdHVzQ29kZSxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlcXVlc3RIZWFkZXJzOiBwYXJzZWQucmVxdWVzdEhlYWRlcnMsXG4gICAgICAgICAgICAgICAgcmVxdWVzdFRpbWVzdGFtcDogcmVzcG9uc2UucmVxdWVzdFRpbWVzdGFtcFxuICAgICAgICAgICAgfSwgbnVsbCwgJyAgJyksIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignRXJyb3Igd3JpdGluZyB0byBjYWNoZTogJyArIGVyci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBGaWxlQ2FjaGUucHJvdG90eXBlLmludmFsaWRhdGVSZXNwb25zZSA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBrZXkgPSBwYXRoXzEucmVzb2x2ZSh0aGlzLl9sb2NhdGlvbiwgZ2V0Q2FjaGVLZXkodXJsKSk7XG4gICAgICAgIGZzLnVubGluayhrZXkgKyAnLmpzb24nLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBpZiAoZXJyICYmIGVyci5jb2RlID09PSAnRU5PRU5UJylcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyIHx8IG51bGwpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBGaWxlQ2FjaGU7XG59KCkpO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBGaWxlQ2FjaGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/FileCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/MemoryCache.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/MemoryCache.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nexports.__esModule = true;\nvar stream_1 = __webpack_require__(/*! stream */ \"stream\");\nvar concat = __webpack_require__(/*! concat-stream */ \"(ssr)/./node_modules/.pnpm/concat-stream@1.6.2/node_modules/concat-stream/index.js\");\nvar MemoryCache = /** @class */ (function () {\n    function MemoryCache() {\n        this._cache = {};\n    }\n    MemoryCache.prototype.getResponse = function (url, callback) {\n        var cache = this._cache;\n        if (cache[url]) {\n            var body = new stream_1.PassThrough();\n            body.end(cache[url].body);\n            callback(null, {\n                statusCode: cache[url].statusCode,\n                headers: cache[url].headers,\n                body: body,\n                requestHeaders: cache[url].requestHeaders,\n                requestTimestamp: cache[url].requestTimestamp\n            });\n        }\n        else {\n            callback(null, null);\n        }\n    };\n    MemoryCache.prototype.updateResponseHeaders = function (url, response) {\n        this._cache[url] = __assign({}, this._cache[url], { headers: response.headers, requestTimestamp: response.requestTimestamp });\n    };\n    MemoryCache.prototype.setResponse = function (url, response) {\n        var cache = this._cache;\n        response.body.pipe(concat(function (body) {\n            cache[url] = {\n                statusCode: response.statusCode,\n                headers: response.headers,\n                body: body,\n                requestHeaders: response.requestHeaders,\n                requestTimestamp: response.requestTimestamp\n            };\n        }));\n    };\n    MemoryCache.prototype.invalidateResponse = function (url, callback) {\n        var cache = this._cache;\n        delete cache[url];\n        callback(null);\n    };\n    return MemoryCache;\n}());\nexports[\"default\"] = MemoryCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaHR0cC1iYXNpY0A4LjEuMy9ub2RlX21vZHVsZXMvaHR0cC1iYXNpYy9saWIvTWVtb3J5Q2FjaGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QyxPQUFPO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixlQUFlLG1CQUFPLENBQUMsc0JBQVE7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHlHQUFlO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msc0JBQXNCLHdFQUF3RTtBQUNwSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsiL2hvbWUvdXNlcm5hbWUvYWxlby9yYXRlLWxpbWl0aW5nLW51bGxpZmllci9ybG4tbWVzc2FnZS1ib2FyZC9ub2RlX21vZHVsZXMvLnBucG0vaHR0cC1iYXNpY0A4LjEuMy9ub2RlX21vZHVsZXMvaHR0cC1iYXNpYy9saWIvTWVtb3J5Q2FjaGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIHN0cmVhbV8xID0gcmVxdWlyZShcInN0cmVhbVwiKTtcbnZhciBjb25jYXQgPSByZXF1aXJlKFwiY29uY2F0LXN0cmVhbVwiKTtcbnZhciBNZW1vcnlDYWNoZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNZW1vcnlDYWNoZSgpIHtcbiAgICAgICAgdGhpcy5fY2FjaGUgPSB7fTtcbiAgICB9XG4gICAgTWVtb3J5Q2FjaGUucHJvdG90eXBlLmdldFJlc3BvbnNlID0gZnVuY3Rpb24gKHVybCwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGNhY2hlID0gdGhpcy5fY2FjaGU7XG4gICAgICAgIGlmIChjYWNoZVt1cmxdKSB7XG4gICAgICAgICAgICB2YXIgYm9keSA9IG5ldyBzdHJlYW1fMS5QYXNzVGhyb3VnaCgpO1xuICAgICAgICAgICAgYm9keS5lbmQoY2FjaGVbdXJsXS5ib2R5KTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHtcbiAgICAgICAgICAgICAgICBzdGF0dXNDb2RlOiBjYWNoZVt1cmxdLnN0YXR1c0NvZGUsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogY2FjaGVbdXJsXS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIGJvZHk6IGJvZHksXG4gICAgICAgICAgICAgICAgcmVxdWVzdEhlYWRlcnM6IGNhY2hlW3VybF0ucmVxdWVzdEhlYWRlcnMsXG4gICAgICAgICAgICAgICAgcmVxdWVzdFRpbWVzdGFtcDogY2FjaGVbdXJsXS5yZXF1ZXN0VGltZXN0YW1wXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIG51bGwpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNZW1vcnlDYWNoZS5wcm90b3R5cGUudXBkYXRlUmVzcG9uc2VIZWFkZXJzID0gZnVuY3Rpb24gKHVybCwgcmVzcG9uc2UpIHtcbiAgICAgICAgdGhpcy5fY2FjaGVbdXJsXSA9IF9fYXNzaWduKHt9LCB0aGlzLl9jYWNoZVt1cmxdLCB7IGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlcXVlc3RUaW1lc3RhbXA6IHJlc3BvbnNlLnJlcXVlc3RUaW1lc3RhbXAgfSk7XG4gICAgfTtcbiAgICBNZW1vcnlDYWNoZS5wcm90b3R5cGUuc2V0UmVzcG9uc2UgPSBmdW5jdGlvbiAodXJsLCByZXNwb25zZSkge1xuICAgICAgICB2YXIgY2FjaGUgPSB0aGlzLl9jYWNoZTtcbiAgICAgICAgcmVzcG9uc2UuYm9keS5waXBlKGNvbmNhdChmdW5jdGlvbiAoYm9keSkge1xuICAgICAgICAgICAgY2FjaGVbdXJsXSA9IHtcbiAgICAgICAgICAgICAgICBzdGF0dXNDb2RlOiByZXNwb25zZS5zdGF0dXNDb2RlLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgYm9keTogYm9keSxcbiAgICAgICAgICAgICAgICByZXF1ZXN0SGVhZGVyczogcmVzcG9uc2UucmVxdWVzdEhlYWRlcnMsXG4gICAgICAgICAgICAgICAgcmVxdWVzdFRpbWVzdGFtcDogcmVzcG9uc2UucmVxdWVzdFRpbWVzdGFtcFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSkpO1xuICAgIH07XG4gICAgTWVtb3J5Q2FjaGUucHJvdG90eXBlLmludmFsaWRhdGVSZXNwb25zZSA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBjYWNoZSA9IHRoaXMuX2NhY2hlO1xuICAgICAgICBkZWxldGUgY2FjaGVbdXJsXTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgfTtcbiAgICByZXR1cm4gTWVtb3J5Q2FjaGU7XG59KCkpO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBNZW1vcnlDYWNoZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/MemoryCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-control-utils.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-control-utils.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nvar parseCacheControl = __webpack_require__(/*! parse-cache-control */ \"(ssr)/./node_modules/.pnpm/parse-cache-control@1.0.1/node_modules/parse-cache-control/index.js\");\nfunction parseCacheControlHeader(res) {\n    var cacheControl = res.headers['cache-control'];\n    var normalisedCacheControl = typeof cacheControl === 'string' ? cacheControl.trim() : ''; // must be normalised for parsing (e.g. parseCacheControl)\n    if (!cacheControl) {\n        return null;\n    }\n    return parseCacheControl(cacheControl);\n}\n// for the purposes of this library, we err on the side of caution and do not cache anything except public (or implicit public)\nvar nonCaching = ['private', 'no-cache', 'no-store', 'no-transform', 'must-revalidate', 'proxy-revalidate'];\nfunction isCacheControlCacheable(parsedCacheControl) {\n    if (!parsedCacheControl) {\n        return false;\n    }\n    if (parsedCacheControl.public) {\n        return true;\n    }\n    // note that the library does not currently support s-maxage\n    if (parsedCacheControl[\"max-age\"]) {\n        // https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.3\n        // The max-age directive on a response implies that the response is cacheable (i.e., \"public\") unless some other, more restrictive cache directive is also present.\n        for (var i = 0; i < nonCaching.length; i++) {\n            if (parsedCacheControl[nonCaching[i]]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * returns true if this response is cacheable (according to cache-control headers)\n */\nfunction isCacheable(res) {\n    return isCacheControlCacheable(parseCacheControlHeader(res));\n}\nexports.isCacheable = isCacheable;\nfunction buildPolicy(parsedCacheControl) {\n    // note that the library does not currently support s-maxage\n    return { maxage: parsedCacheControl['max-age'] || null };\n}\n/**\n * if the response is cacheable, returns an object detailing the maxage of the cache\n * otherwise returns null\n */\nfunction cachePolicy(res) {\n    var parsed = parseCacheControlHeader(res);\n    return parsed && isCacheControlCacheable(parsed) ? buildPolicy(parsed) : null;\n}\nexports.cachePolicy = cachePolicy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaHR0cC1iYXNpY0A4LjEuMy9ub2RlX21vZHVsZXMvaHR0cC1iYXNpYy9saWIvY2FjaGUtY29udHJvbC11dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQjtBQUNsQix3QkFBd0IsbUJBQU8sQ0FBQywySEFBcUI7QUFDckQ7QUFDQTtBQUNBLDhGQUE4RjtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXJuYW1lL2FsZW8vcmF0ZS1saW1pdGluZy1udWxsaWZpZXIvcmxuLW1lc3NhZ2UtYm9hcmQvbm9kZV9tb2R1bGVzLy5wbnBtL2h0dHAtYmFzaWNAOC4xLjMvbm9kZV9tb2R1bGVzL2h0dHAtYmFzaWMvbGliL2NhY2hlLWNvbnRyb2wtdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIHBhcnNlQ2FjaGVDb250cm9sID0gcmVxdWlyZSgncGFyc2UtY2FjaGUtY29udHJvbCcpO1xuZnVuY3Rpb24gcGFyc2VDYWNoZUNvbnRyb2xIZWFkZXIocmVzKSB7XG4gICAgdmFyIGNhY2hlQ29udHJvbCA9IHJlcy5oZWFkZXJzWydjYWNoZS1jb250cm9sJ107XG4gICAgdmFyIG5vcm1hbGlzZWRDYWNoZUNvbnRyb2wgPSB0eXBlb2YgY2FjaGVDb250cm9sID09PSAnc3RyaW5nJyA/IGNhY2hlQ29udHJvbC50cmltKCkgOiAnJzsgLy8gbXVzdCBiZSBub3JtYWxpc2VkIGZvciBwYXJzaW5nIChlLmcuIHBhcnNlQ2FjaGVDb250cm9sKVxuICAgIGlmICghY2FjaGVDb250cm9sKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gcGFyc2VDYWNoZUNvbnRyb2woY2FjaGVDb250cm9sKTtcbn1cbi8vIGZvciB0aGUgcHVycG9zZXMgb2YgdGhpcyBsaWJyYXJ5LCB3ZSBlcnIgb24gdGhlIHNpZGUgb2YgY2F1dGlvbiBhbmQgZG8gbm90IGNhY2hlIGFueXRoaW5nIGV4Y2VwdCBwdWJsaWMgKG9yIGltcGxpY2l0IHB1YmxpYylcbnZhciBub25DYWNoaW5nID0gWydwcml2YXRlJywgJ25vLWNhY2hlJywgJ25vLXN0b3JlJywgJ25vLXRyYW5zZm9ybScsICdtdXN0LXJldmFsaWRhdGUnLCAncHJveHktcmV2YWxpZGF0ZSddO1xuZnVuY3Rpb24gaXNDYWNoZUNvbnRyb2xDYWNoZWFibGUocGFyc2VkQ2FjaGVDb250cm9sKSB7XG4gICAgaWYgKCFwYXJzZWRDYWNoZUNvbnRyb2wpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAocGFyc2VkQ2FjaGVDb250cm9sLnB1YmxpYykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgLy8gbm90ZSB0aGF0IHRoZSBsaWJyYXJ5IGRvZXMgbm90IGN1cnJlbnRseSBzdXBwb3J0IHMtbWF4YWdlXG4gICAgaWYgKHBhcnNlZENhY2hlQ29udHJvbFtcIm1heC1hZ2VcIl0pIHtcbiAgICAgICAgLy8gaHR0cHM6Ly93d3cudzMub3JnL1Byb3RvY29scy9yZmMyNjE2L3JmYzI2MTYtc2VjMTQuaHRtbCNzZWMxNC45LjNcbiAgICAgICAgLy8gVGhlIG1heC1hZ2UgZGlyZWN0aXZlIG9uIGEgcmVzcG9uc2UgaW1wbGllcyB0aGF0IHRoZSByZXNwb25zZSBpcyBjYWNoZWFibGUgKGkuZS4sIFwicHVibGljXCIpIHVubGVzcyBzb21lIG90aGVyLCBtb3JlIHJlc3RyaWN0aXZlIGNhY2hlIGRpcmVjdGl2ZSBpcyBhbHNvIHByZXNlbnQuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9uQ2FjaGluZy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHBhcnNlZENhY2hlQ29udHJvbFtub25DYWNoaW5nW2ldXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiByZXR1cm5zIHRydWUgaWYgdGhpcyByZXNwb25zZSBpcyBjYWNoZWFibGUgKGFjY29yZGluZyB0byBjYWNoZS1jb250cm9sIGhlYWRlcnMpXG4gKi9cbmZ1bmN0aW9uIGlzQ2FjaGVhYmxlKHJlcykge1xuICAgIHJldHVybiBpc0NhY2hlQ29udHJvbENhY2hlYWJsZShwYXJzZUNhY2hlQ29udHJvbEhlYWRlcihyZXMpKTtcbn1cbmV4cG9ydHMuaXNDYWNoZWFibGUgPSBpc0NhY2hlYWJsZTtcbmZ1bmN0aW9uIGJ1aWxkUG9saWN5KHBhcnNlZENhY2hlQ29udHJvbCkge1xuICAgIC8vIG5vdGUgdGhhdCB0aGUgbGlicmFyeSBkb2VzIG5vdCBjdXJyZW50bHkgc3VwcG9ydCBzLW1heGFnZVxuICAgIHJldHVybiB7IG1heGFnZTogcGFyc2VkQ2FjaGVDb250cm9sWydtYXgtYWdlJ10gfHwgbnVsbCB9O1xufVxuLyoqXG4gKiBpZiB0aGUgcmVzcG9uc2UgaXMgY2FjaGVhYmxlLCByZXR1cm5zIGFuIG9iamVjdCBkZXRhaWxpbmcgdGhlIG1heGFnZSBvZiB0aGUgY2FjaGVcbiAqIG90aGVyd2lzZSByZXR1cm5zIG51bGxcbiAqL1xuZnVuY3Rpb24gY2FjaGVQb2xpY3kocmVzKSB7XG4gICAgdmFyIHBhcnNlZCA9IHBhcnNlQ2FjaGVDb250cm9sSGVhZGVyKHJlcyk7XG4gICAgcmV0dXJuIHBhcnNlZCAmJiBpc0NhY2hlQ29udHJvbENhY2hlYWJsZShwYXJzZWQpID8gYnVpbGRQb2xpY3kocGFyc2VkKSA6IG51bGw7XG59XG5leHBvcnRzLmNhY2hlUG9saWN5ID0gY2FjaGVQb2xpY3k7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-control-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-utils.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-utils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nvar cache_control_utils_1 = __webpack_require__(/*! ./cache-control-utils */ \"(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-control-utils.js\");\nfunction isMatch(requestHeaders, cachedResponse) {\n    var vary = cachedResponse.headers['vary'];\n    if (vary && cachedResponse.requestHeaders) {\n        vary = '' + vary;\n        return vary.split(',').map(function (header) { return header.trim().toLowerCase(); }).every(function (header) {\n            return requestHeaders[header] === cachedResponse.requestHeaders[header];\n        });\n    }\n    else {\n        return true;\n    }\n}\nexports.isMatch = isMatch;\n;\nfunction isExpired(cachedResponse) {\n    var policy = cache_control_utils_1.cachePolicy(cachedResponse);\n    if (policy) {\n        var time = (Date.now() - cachedResponse.requestTimestamp) / 1000;\n        if (policy.maxage !== null && policy.maxage > time) {\n            return false;\n        }\n    }\n    if (cachedResponse.statusCode === 301 || cachedResponse.statusCode === 308)\n        return false;\n    return true;\n}\nexports.isExpired = isExpired;\n;\nfunction canCache(res) {\n    if (res.headers['etag'])\n        return true;\n    if (res.headers['last-modified'])\n        return true;\n    if (cache_control_utils_1.isCacheable(res))\n        return true;\n    if (res.statusCode === 301 || res.statusCode === 308)\n        return true;\n    return false;\n}\nexports.canCache = canCache;\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vaHR0cC1iYXNpY0A4LjEuMy9ub2RlX21vZHVsZXMvaHR0cC1iYXNpYy9saWIvY2FjaGUtdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0I7QUFDbEIsNEJBQTRCLG1CQUFPLENBQUMsNkhBQXVCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELHFDQUFxQztBQUM1RjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsiL2hvbWUvdXNlcm5hbWUvYWxlby9yYXRlLWxpbWl0aW5nLW51bGxpZmllci9ybG4tbWVzc2FnZS1ib2FyZC9ub2RlX21vZHVsZXMvLnBucG0vaHR0cC1iYXNpY0A4LjEuMy9ub2RlX21vZHVsZXMvaHR0cC1iYXNpYy9saWIvY2FjaGUtdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIGNhY2hlX2NvbnRyb2xfdXRpbHNfMSA9IHJlcXVpcmUoXCIuL2NhY2hlLWNvbnRyb2wtdXRpbHNcIik7XG5mdW5jdGlvbiBpc01hdGNoKHJlcXVlc3RIZWFkZXJzLCBjYWNoZWRSZXNwb25zZSkge1xuICAgIHZhciB2YXJ5ID0gY2FjaGVkUmVzcG9uc2UuaGVhZGVyc1sndmFyeSddO1xuICAgIGlmICh2YXJ5ICYmIGNhY2hlZFJlc3BvbnNlLnJlcXVlc3RIZWFkZXJzKSB7XG4gICAgICAgIHZhcnkgPSAnJyArIHZhcnk7XG4gICAgICAgIHJldHVybiB2YXJ5LnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uIChoZWFkZXIpIHsgcmV0dXJuIGhlYWRlci50cmltKCkudG9Mb3dlckNhc2UoKTsgfSkuZXZlcnkoZnVuY3Rpb24gKGhlYWRlcikge1xuICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RIZWFkZXJzW2hlYWRlcl0gPT09IGNhY2hlZFJlc3BvbnNlLnJlcXVlc3RIZWFkZXJzW2hlYWRlcl07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuZXhwb3J0cy5pc01hdGNoID0gaXNNYXRjaDtcbjtcbmZ1bmN0aW9uIGlzRXhwaXJlZChjYWNoZWRSZXNwb25zZSkge1xuICAgIHZhciBwb2xpY3kgPSBjYWNoZV9jb250cm9sX3V0aWxzXzEuY2FjaGVQb2xpY3koY2FjaGVkUmVzcG9uc2UpO1xuICAgIGlmIChwb2xpY3kpIHtcbiAgICAgICAgdmFyIHRpbWUgPSAoRGF0ZS5ub3coKSAtIGNhY2hlZFJlc3BvbnNlLnJlcXVlc3RUaW1lc3RhbXApIC8gMTAwMDtcbiAgICAgICAgaWYgKHBvbGljeS5tYXhhZ2UgIT09IG51bGwgJiYgcG9saWN5Lm1heGFnZSA+IHRpbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY2FjaGVkUmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMzAxIHx8IGNhY2hlZFJlc3BvbnNlLnN0YXR1c0NvZGUgPT09IDMwOClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5pc0V4cGlyZWQgPSBpc0V4cGlyZWQ7XG47XG5mdW5jdGlvbiBjYW5DYWNoZShyZXMpIHtcbiAgICBpZiAocmVzLmhlYWRlcnNbJ2V0YWcnXSlcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKHJlcy5oZWFkZXJzWydsYXN0LW1vZGlmaWVkJ10pXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmIChjYWNoZV9jb250cm9sX3V0aWxzXzEuaXNDYWNoZWFibGUocmVzKSlcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKHJlcy5zdGF0dXNDb2RlID09PSAzMDEgfHwgcmVzLnN0YXR1c0NvZGUgPT09IDMwOClcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0cy5jYW5DYWNoZSA9IGNhbkNhY2hlO1xuO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/index.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nexports.__esModule = true;\nvar cacheUtils = __webpack_require__(/*! ./cache-utils */ \"(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/cache-utils.js\");\nvar FileCache_1 = __webpack_require__(/*! ./FileCache */ \"(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/FileCache.js\");\nvar MemoryCache_1 = __webpack_require__(/*! ./MemoryCache */ \"(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/MemoryCache.js\");\nvar http_1 = __webpack_require__(/*! http */ \"http\");\nvar zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nvar url_1 = __webpack_require__(/*! url */ \"url\");\nvar stream_1 = __webpack_require__(/*! stream */ \"stream\");\nvar https_1 = __webpack_require__(/*! https */ \"https\");\nvar Response = __webpack_require__(/*! http-response-object */ \"(ssr)/./node_modules/.pnpm/http-response-object@3.0.2/node_modules/http-response-object/lib/index.js\");\nexports.Response = Response;\nvar caseless = __webpack_require__(/*! caseless */ \"(ssr)/./node_modules/.pnpm/caseless@0.12.0/node_modules/caseless/index.js\");\nvar fileCache = new FileCache_1[\"default\"](__dirname + '/cache');\nvar memoryCache = new MemoryCache_1[\"default\"]();\nfunction requestProtocol(protocol, options, callback) {\n    if (protocol === 'http') {\n        return http_1.request(options, callback);\n    }\n    else if (protocol === 'https') {\n        return https_1.request(options, callback);\n    }\n    throw new Error('Unsupported protocol ' + protocol);\n}\nfunction request(method, url, options, callback) {\n    if (typeof options === 'function') {\n        callback = options;\n        options = null;\n    }\n    if (options === null || options === undefined) {\n        options = {};\n    }\n    if (typeof options !== 'object') {\n        throw new TypeError('options must be an object (or null)');\n    }\n    if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n    }\n    return _request(method, ((url && typeof url === 'object') ? url.href : url), options, callback);\n}\nfunction _request(method, url, options, callback) {\n    var start = Date.now();\n    if (typeof method !== 'string') {\n        throw new TypeError('The method must be a string.');\n    }\n    if (typeof url !== 'string') {\n        throw new TypeError('The URL/path must be a string or a URL object.');\n    }\n    method = method.toUpperCase();\n    var urlObject = url_1.parse(url);\n    var protocol = (urlObject.protocol || '').replace(/\\:$/, '');\n    if (protocol !== 'http' && protocol !== 'https') {\n        throw new TypeError('The protocol \"' + protocol + '\" is not supported, cannot load \"' + url + '\"');\n    }\n    var rawHeaders = options.headers || {};\n    var headers = caseless(rawHeaders);\n    if (urlObject.auth) {\n        headers.set('Authorization', 'Basic ' + (Buffer.from(urlObject.auth)).toString('base64'));\n    }\n    var agent = 'agent' in options ? options.agent : false;\n    var cache = options.cache;\n    if (typeof cache === 'string') {\n        if (cache === 'file') {\n            cache = fileCache;\n        }\n        else if (cache === 'memory') {\n            cache = memoryCache;\n        }\n    }\n    if (cache && !(typeof cache === 'object' && typeof cache.getResponse === 'function' && typeof cache.setResponse === 'function' && typeof cache.invalidateResponse === 'function')) {\n        throw new TypeError(cache + ' is not a valid cache, caches must have `getResponse`, `setResponse` and `invalidateResponse` methods.');\n    }\n    var ignoreFailedInvalidation = options.ignoreFailedInvalidation;\n    if (options.duplex !== undefined && typeof options.duplex !== 'boolean') {\n        throw new Error('expected options.duplex to be a boolean if provided');\n    }\n    var duplex = options.duplex !== undefined ? options.duplex : !(method === 'GET' || method === 'DELETE' || method === 'HEAD');\n    var unsafe = !(method === 'GET' || method === 'OPTIONS' || method === 'HEAD');\n    if (options.gzip) {\n        headers.set('Accept-Encoding', headers.has('Accept-Encoding') ? headers.get('Accept-Encoding') + ',gzip,deflate' : 'gzip,deflate');\n        return _request(method, url, {\n            allowRedirectHeaders: options.allowRedirectHeaders,\n            duplex: duplex,\n            headers: rawHeaders,\n            agent: agent,\n            followRedirects: options.followRedirects,\n            retry: options.retry,\n            retryDelay: options.retryDelay,\n            maxRetries: options.maxRetries,\n            cache: cache,\n            timeout: options.timeout\n        }, function (err, res) {\n            if (err)\n                return callback(err);\n            if (!res)\n                return callback(new Error('Response should not be undefined if there is no error.'));\n            var newHeaders = __assign({}, res.headers);\n            var newBody = res.body;\n            switch (newHeaders['content-encoding']) {\n                case 'gzip':\n                    delete newHeaders['content-encoding'];\n                    newBody = res.body.pipe(zlib_1.createGunzip());\n                    break;\n                case 'deflate':\n                    delete newHeaders['content-encoding'];\n                    newBody = res.body.pipe(zlib_1.createInflate());\n                    break;\n            }\n            return callback(err, new Response(res.statusCode, newHeaders, newBody, res.url));\n        });\n    }\n    if (options.followRedirects) {\n        return _request(method, url, {\n            allowRedirectHeaders: options.allowRedirectHeaders,\n            duplex: duplex,\n            headers: rawHeaders,\n            agent: agent,\n            retry: options.retry,\n            retryDelay: options.retryDelay,\n            maxRetries: options.maxRetries,\n            cache: cache,\n            timeout: options.timeout\n        }, function (err, res) {\n            if (err)\n                return callback(err);\n            if (!res)\n                return callback(new Error('Response should not be undefined if there is no error.'));\n            if (options.followRedirects && isRedirect(res.statusCode)) {\n                // prevent leakage of file handles\n                res.body.resume();\n                if (method === 'DELETE' && res.statusCode === 303) {\n                    // 303 See Other should convert to GET for duplex\n                    // requests and for DELETE\n                    method = 'GET';\n                }\n                if (options.maxRedirects === 0) {\n                    var err_1 = new Error('Maximum number of redirects exceeded');\n                    err_1.res = res;\n                    return callback(err_1, res);\n                }\n                options = __assign({}, options, { duplex: false, maxRedirects: options.maxRedirects && options.maxRedirects !== Infinity ? options.maxRedirects - 1 : options.maxRedirects });\n                // don't maintain headers through redirects\n                // This fixes a problem where a POST to http://example.com\n                // might result in a GET to http://example.co.uk that includes \"content-length\"\n                // as a header\n                var headers_1 = caseless(options.headers);\n                var redirectHeaders = {};\n                if (options.allowRedirectHeaders) {\n                    for (var i = 0; i < options.allowRedirectHeaders.length; i++) {\n                        var headerName = options.allowRedirectHeaders[i];\n                        var headerValue = headers_1.get(headerName);\n                        if (headerValue) {\n                            redirectHeaders[headerName] = headerValue;\n                        }\n                    }\n                }\n                options.headers = redirectHeaders;\n                var location = res.headers.location;\n                if (typeof location !== 'string') {\n                    return callback(new Error('Cannot redirect to non string location: ' + location));\n                }\n                return request(duplex ? 'GET' : method, url_1.resolve(url, location), options, callback);\n            }\n            else {\n                return callback(null, res);\n            }\n        });\n    }\n    if (cache && method === 'GET' && !duplex) {\n        var timestamp_1 = Date.now();\n        return cache.getResponse(url, function (err, cachedResponse) {\n            if (err) {\n                console.warn('Error reading from cache: ' + err.message);\n            }\n            var isMatch = !!(cachedResponse && cacheUtils.isMatch(rawHeaders, cachedResponse));\n            if (cachedResponse && (options.isMatch ? options.isMatch(rawHeaders, cachedResponse, isMatch) : isMatch)) {\n                var isExpired = cacheUtils.isExpired(cachedResponse);\n                if (!(options.isExpired ? options.isExpired(cachedResponse, isExpired) : isExpired)) {\n                    var res = new Response(cachedResponse.statusCode, cachedResponse.headers, cachedResponse.body, url);\n                    res.fromCache = true;\n                    res.fromNotModified = false;\n                    return callback(null, res);\n                }\n                else {\n                    if (cachedResponse.headers['etag']) {\n                        headers.set('If-None-Match', cachedResponse.headers['etag']);\n                    }\n                    if (cachedResponse.headers['last-modified']) {\n                        headers.set('If-Modified-Since', cachedResponse.headers['last-modified']);\n                    }\n                }\n            }\n            request('GET', url, {\n                allowRedirectHeaders: options.allowRedirectHeaders,\n                headers: rawHeaders,\n                retry: options.retry,\n                retryDelay: options.retryDelay,\n                maxRetries: options.maxRetries,\n                agent: agent,\n                timeout: options.timeout\n            }, function (err, res) {\n                if (err)\n                    return callback(err);\n                if (!res)\n                    return callback(new Error('Response should not be undefined if there is no error.'));\n                if (res.statusCode === 304 && cachedResponse) { // Not Modified\n                    // prevent leakage of file handles\n                    res.body.resume();\n                    var resultBody = cachedResponse.body;\n                    var c = cache;\n                    if (c.updateResponseHeaders) {\n                        c.updateResponseHeaders(url, {\n                            headers: res.headers,\n                            requestTimestamp: timestamp_1\n                        });\n                    }\n                    else {\n                        var cachedResponseBody_1 = new stream_1.PassThrough();\n                        var newResultBody_1 = new stream_1.PassThrough();\n                        resultBody.on('data', function (data) {\n                            cachedResponseBody_1.write(data);\n                            newResultBody_1.write(data);\n                        });\n                        resultBody.on('end', function () {\n                            cachedResponseBody_1.end();\n                            newResultBody_1.end();\n                        });\n                        resultBody = newResultBody_1;\n                        cache.setResponse(url, {\n                            statusCode: cachedResponse.statusCode,\n                            headers: res.headers,\n                            body: cachedResponseBody_1,\n                            requestHeaders: cachedResponse.requestHeaders,\n                            requestTimestamp: timestamp_1\n                        });\n                    }\n                    var response = new Response(cachedResponse.statusCode, cachedResponse.headers, resultBody, url);\n                    response.fromCache = true;\n                    response.fromNotModified = true;\n                    return callback(null, response);\n                }\n                // prevent leakage of file handles\n                cachedResponse && cachedResponse.body.resume();\n                var canCache = cacheUtils.canCache(res);\n                if (options.canCache ? options.canCache(res, canCache) : canCache) {\n                    var cachedResponseBody_2 = new stream_1.PassThrough();\n                    var resultResponseBody_1 = new stream_1.PassThrough();\n                    res.body.on('data', function (data) {\n                        cachedResponseBody_2.write(data);\n                        resultResponseBody_1.write(data);\n                    });\n                    res.body.on('end', function () { cachedResponseBody_2.end(); resultResponseBody_1.end(); });\n                    var resultResponse = new Response(res.statusCode, res.headers, resultResponseBody_1, url);\n                    cache.setResponse(url, {\n                        statusCode: res.statusCode,\n                        headers: res.headers,\n                        body: cachedResponseBody_2,\n                        requestHeaders: rawHeaders,\n                        requestTimestamp: timestamp_1\n                    });\n                    return callback(null, resultResponse);\n                }\n                else {\n                    return callback(null, res);\n                }\n            });\n        });\n    }\n    function attempt(n) {\n        return _request(method, url, {\n            allowRedirectHeaders: options.allowRedirectHeaders,\n            headers: rawHeaders,\n            agent: agent,\n            timeout: options.timeout\n        }, function (err, res) {\n            var retry = err || !res || res.statusCode >= 400;\n            if (typeof options.retry === 'function') {\n                retry = options.retry(err, res, n + 1);\n            }\n            if (n >= (options.maxRetries || 5)) {\n                retry = false;\n            }\n            if (retry) {\n                var delay = options.retryDelay;\n                if (typeof delay === 'function') {\n                    delay = delay(err, res, n + 1);\n                }\n                delay = delay || 200;\n                setTimeout(function () {\n                    attempt(n + 1);\n                }, delay);\n            }\n            else {\n                callback(err, res);\n            }\n        });\n    }\n    if (options.retry && method === 'GET' && !duplex) {\n        return attempt(0);\n    }\n    var responded = false;\n    var timeout = null;\n    var req = requestProtocol(protocol, {\n        host: urlObject.hostname,\n        port: urlObject.port == null ? undefined : +urlObject.port,\n        path: urlObject.path,\n        method: method,\n        headers: rawHeaders,\n        agent: agent\n    }, function (res) {\n        var end = Date.now();\n        if (responded)\n            return res.resume();\n        responded = true;\n        if (timeout !== null)\n            clearTimeout(timeout);\n        var result = new Response(res.statusCode || 0, res.headers, res, url);\n        if (cache && unsafe && res.statusCode && res.statusCode < 400) {\n            cache.invalidateResponse(url, function (err) {\n                if (err && !ignoreFailedInvalidation) {\n                    callback(new Error('Error invalidating the cache for' + url + ': ' + err.message), result);\n                }\n                else {\n                    callback(null, result);\n                }\n            });\n        }\n        else {\n            callback(null, result);\n        }\n    }).on('error', function (err) {\n        if (responded)\n            return;\n        responded = true;\n        if (timeout !== null)\n            clearTimeout(timeout);\n        callback(err);\n    });\n    function onTimeout() {\n        if (responded)\n            return;\n        responded = true;\n        if (timeout !== null)\n            clearTimeout(timeout);\n        req.abort();\n        var duration = Date.now() - start;\n        var err = new Error('Request timed out after ' + duration + 'ms');\n        err.timeout = true;\n        err.duration = duration;\n        callback(err);\n    }\n    if (options.socketTimeout) {\n        req.setTimeout(options.socketTimeout, onTimeout);\n    }\n    if (options.timeout) {\n        timeout = setTimeout(onTimeout, options.timeout);\n    }\n    if (duplex) {\n        return req;\n    }\n    else {\n        req.end();\n    }\n    return undefined;\n}\nfunction isRedirect(statusCode) {\n    return statusCode === 301 || statusCode === 302 || statusCode === 303 || statusCode === 307 || statusCode === 308;\n}\nexports[\"default\"] = request;\nmodule.exports = request;\nmodule.exports[\"default\"] = request;\nmodule.exports.Response = Response;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/http-basic@8.1.3/node_modules/http-basic/lib/index.js\n");

/***/ })

};
;